# -*- coding: utf-8 -*-
"""CURE

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dO-r6tBg2Khhk-mxN2m_EXL0DfLIrfXu
"""

import numpy as np
import pandas as pd
from sklearn.datasets import make_blobs

# Generate dataset
X, _ = make_blobs(n_samples=300, centers=4, random_state=42)

# Save to CSV
df = pd.DataFrame(X, columns=['Feature_1', 'Feature_2'])
df.to_csv('cure_dataset.csv', index=False)

print("Dataset saved as 'cure_dataset.csv'")

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import make_blobs
from sklearn.cluster import AgglomerativeClustering

# Generate dataset
X, _ = make_blobs(n_samples=300, centers=4, random_state=42)

# Apply Agglomerative Clustering
clustering = AgglomerativeClustering(n_clusters=4).fit(X)

# Select CURE representatives (one per cluster, slightly moved)
reduced_representatives = []
for i in range(4):
    cluster_points = X[clustering.labels_ == i]
    rep_point = cluster_points[np.random.choice(len(cluster_points))]
    reduced_representatives.append(rep_point - 0.1 * (cluster_points.mean(axis=0) - rep_point))

reduced_representatives = np.array(reduced_representatives)



representatives = np.array(representatives)  # Convert to a NumPy array
# Plot clusters and representatives
plt.scatter(X[:, 0], X[:, 1], alpha=0.6, label='Data Points')
plt.scatter(reduced_representatives[:, 0], reduced_representatives[:, 1], c='red', marker='X', label='CURE Representatives')
plt.legend()
plt.title('CURE Clustering')
plt.show()

